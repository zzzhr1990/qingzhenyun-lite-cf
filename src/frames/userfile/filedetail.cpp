/////////////////////////////////////////////////////////////////////////////
// Name:        filedetail.cpp
// Purpose:     
// Author:      
// Modified by: 
// Created:     21/09/2018 23:30:50
// RCS-ID:      
// Copyright:   
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (unregistered), 21/09/2018 23:30:50



////@begin includes
#include "filedetail.h"
#include "../../util/common_util.h"
////@end includes


////@begin XPM images
////@end XPM images


/*
 * FileDetail type definition
 */

IMPLEMENT_DYNAMIC_CLASS(FileDetail, wxDialog)


/*
 * FileDetail event table definition
 */

	BEGIN_EVENT_TABLE(FileDetail, wxDialog)

	////@begin FileDetail event table entries
	////@end FileDetail event table entries

	END_EVENT_TABLE()


	/*
	 * FileDetail constructors
	 */

	FileDetail::FileDetail()
{
	Init();
}

FileDetail::FileDetail(wxWindow* parent, const web::json::value &info, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style)
{
	Init();
	Create(parent,info, id, caption, pos, size, style);
}


/*
 * FileDetail creator
 */

bool FileDetail::Create(wxWindow* parent, const web::json::value &info, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style)
{
	////@begin FileDetail creation
	SetExtraStyle(wxWS_EX_VALIDATE_RECURSIVELY | wxWS_EX_BLOCK_EVENTS);
	wxDialog::Create(parent, id, caption, pos, size, style);

	CreateControls(info);
	if (GetSizer())
	{
		GetSizer()->SetSizeHints(this);
	}
	Centre();
	////@end FileDetail creation
	return true;
}


/*
 * FileDetail destructor
 */

FileDetail::~FileDetail()
{
	////@begin FileDetail destruction
	////@end FileDetail destruction
}


/*
 * Member initialisation
 */

void FileDetail::Init()
{
	////@begin FileDetail member initialisation
	////@end FileDetail member initialisation
}


/*
 * Control creation for FileDetail
 */

void FileDetail::CreateControls(const web::json::value &info)
{
	////@begin FileDetail content construction
		// Generated by DialogBlocks, 21/09/2018 23:52:04 (unregistered)

	FileDetail* itemDialog1 = this;

	wxBoxSizer* itemBoxSizer1 = new wxBoxSizer(wxVERTICAL);
	itemDialog1->SetSizer(itemBoxSizer1);

	wxBoxSizer* itemBoxSizer2 = new wxBoxSizer(wxVERTICAL);
	itemBoxSizer1->Add(itemBoxSizer2, 1, wxGROW | wxALL, 5);

	wxBoxSizer* itemBoxSizer3 = new wxBoxSizer(wxHORIZONTAL);
	itemBoxSizer2->Add(itemBoxSizer3, 1, wxGROW | wxALL, 5);

	wxFlexGridSizer* itemFlexGridSizer4 = new wxFlexGridSizer(0, 2, 0, 0);
	itemBoxSizer3->Add(itemFlexGridSizer4, 1, wxALIGN_CENTER_VERTICAL | wxALL, 5);

	wxStaticText* itemStaticText5 = new wxStaticText(itemDialog1, wxID_STATIC, _("File name"), wxDefaultPosition, wxDefaultSize, 0);
	itemFlexGridSizer4->Add(itemStaticText5, 0, wxALIGN_LEFT | wxALIGN_CENTER_VERTICAL | wxALL, 5);

	wxTextCtrl* itemTextCtrl6 = new wxTextCtrl(itemDialog1, wxID_ANY, wxEmptyString, wxDefaultPosition, wxSize(300, -1), 0);
	if (info.has_field(U("name"))) {
		itemTextCtrl6->SetValue(info.at(U("name")).as_string());
	}
	itemTextCtrl6->SetEditable(false);
	itemFlexGridSizer4->Add(itemTextCtrl6, 0, wxGROW | wxALIGN_CENTER_VERTICAL | wxALL, 5);

	wxStaticText* itemStaticText7 = new wxStaticText(itemDialog1, wxID_STATIC, _("UUID"), wxDefaultPosition, wxDefaultSize, 0);
	
	itemFlexGridSizer4->Add(itemStaticText7, 0, wxALIGN_LEFT | wxALIGN_CENTER_VERTICAL | wxALL, 5);

	wxStaticText* itemStaticText8 = new wxStaticText(itemDialog1, wxID_STATIC, _("Unknown"), wxDefaultPosition, wxDefaultSize, 0);

	if (info.has_field(U("uuid"))) {
		itemStaticText8->SetLabel(info.at(U("uuid")).as_string());
	}

	itemFlexGridSizer4->Add(itemStaticText8, 0, wxALIGN_CENTER_HORIZONTAL | wxALIGN_CENTER_VERTICAL | wxALL, 5);

	wxStaticText* itemStaticText9 = new wxStaticText(itemDialog1, wxID_STATIC, _("Size"), wxDefaultPosition, wxDefaultSize, 0);
	itemFlexGridSizer4->Add(itemStaticText9, 0, wxALIGN_LEFT | wxALIGN_CENTER_VERTICAL | wxALL, 5);

	wxStaticText* itemStaticText10 = new wxStaticText(itemDialog1, wxID_STATIC, _("0B (0B)"), wxDefaultPosition, wxDefaultSize, 0);
	if (info.has_field(U("size"))) {
		auto size = info.at(U("size")).as_number().to_int64();
		itemStaticText10->SetLabel(ConvertSizeToDisplay(size) + wxT(" (") + wxString::Format("%lld", size) + _(" Bytes") + wxT(")"));
	}
	itemFlexGridSizer4->Add(itemStaticText10, 0, wxALIGN_CENTER_HORIZONTAL | wxALIGN_CENTER_VERTICAL | wxALL, 5);

	wxStaticText* itemStaticText11 = new wxStaticText(itemDialog1, wxID_STATIC, _("Ext"), wxDefaultPosition, wxDefaultSize, 0);
	itemFlexGridSizer4->Add(itemStaticText11, 0, wxALIGN_LEFT | wxALIGN_CENTER_VERTICAL | wxALL, 5);

	wxStaticText* itemStaticText12 = new wxStaticText(itemDialog1, wxID_STATIC, _("Unknown"), wxDefaultPosition, wxDefaultSize, 0);
	if (info.has_field(U("ext"))) {
		itemStaticText12->SetLabel(info.at(U("ext")).as_string());
	}
	itemFlexGridSizer4->Add(itemStaticText12, 0, wxALIGN_CENTER_HORIZONTAL | wxALIGN_CENTER_VERTICAL | wxALL, 5);

	wxStaticText* itemStaticText13 = new wxStaticText(itemDialog1, wxID_STATIC, _("Path"), wxDefaultPosition, wxDefaultSize, 0);
	itemFlexGridSizer4->Add(itemStaticText13, 0, wxALIGN_LEFT | wxALIGN_CENTER_VERTICAL | wxALL, 5);

	wxTextCtrl* itemTextCtrl14 = new wxTextCtrl(itemDialog1, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0);
	itemFlexGridSizer4->Add(itemTextCtrl14, 0, wxGROW | wxALIGN_CENTER_VERTICAL | wxALL, 5);
	itemTextCtrl14->SetEditable(false);
	if (info.has_field(U("path"))) {
		itemTextCtrl14->SetValue(info.at(U("path")).as_string());
	}

	wxStaticText* itemStaticText15 = new wxStaticText(itemDialog1, wxID_STATIC, _("Mime"), wxDefaultPosition, wxDefaultSize, 0);
	itemFlexGridSizer4->Add(itemStaticText15, 0, wxALIGN_LEFT | wxALIGN_CENTER_VERTICAL | wxALL, 5);

	wxStaticText* itemStaticText16 = new wxStaticText(itemDialog1, wxID_STATIC, _("Unknown"), wxDefaultPosition, wxDefaultSize, 0);
	if (info.has_field(U("mime"))) {
		itemStaticText16->SetLabel(info.at(U("mime")).as_string());
	}
	itemFlexGridSizer4->Add(itemStaticText16, 0, wxALIGN_CENTER_HORIZONTAL | wxALIGN_CENTER_VERTICAL | wxALL, 5);

	wxStaticText* itemStaticText17 = new wxStaticText(itemDialog1, wxID_STATIC, _("Preview"), wxDefaultPosition, wxDefaultSize, 0);
	itemFlexGridSizer4->Add(itemStaticText17, 0, wxALIGN_LEFT | wxALIGN_CENTER_VERTICAL | wxALL, 5);

	wxStaticText* itemStaticText18 = new wxStaticText(itemDialog1, wxID_STATIC, _("No"), wxDefaultPosition, wxDefaultSize, 0);
	if (info.has_field(U("hasPreview"))) {
		itemStaticText18->SetLabel(info.at(U("hasPreview")).as_bool() ? _("Yes") : _("No"));
	}
	itemFlexGridSizer4->Add(itemStaticText18, 0, wxALIGN_CENTER_HORIZONTAL | wxALIGN_CENTER_VERTICAL | wxALL, 5);

	wxStaticText* itemStaticText19 = new wxStaticText(itemDialog1, wxID_STATIC, _("Type"), wxDefaultPosition, wxDefaultSize, 0);
	itemFlexGridSizer4->Add(itemStaticText19, 0, wxALIGN_LEFT | wxALIGN_CENTER_VERTICAL | wxALL, 5);

	wxStaticText* itemStaticText20 = new wxStaticText(itemDialog1, wxID_STATIC, _("0"), wxDefaultPosition, wxDefaultSize, 0);
	if (info.has_field(U("type"))) {
		itemStaticText20->SetLabel(wxString::Format(wxT("%d"), info.at(U("type")).as_integer()));
	}
	itemFlexGridSizer4->Add(itemStaticText20, 0, wxALIGN_CENTER_HORIZONTAL | wxALIGN_CENTER_VERTICAL | wxALL, 5);


	wxStaticText* itemStaticText21 = new wxStaticText(itemDialog1, wxID_STATIC, _("Version"), wxDefaultPosition, wxDefaultSize, 0);
	
	itemFlexGridSizer4->Add(itemStaticText21, 0, wxALIGN_LEFT | wxALIGN_CENTER_VERTICAL | wxALL, 5);

	wxStaticText* itemStaticText22 = new wxStaticText(itemDialog1, wxID_STATIC, _("0"), wxDefaultPosition, wxDefaultSize, 0);
	if (info.has_field(U("version"))) {
		itemStaticText22->SetLabel(wxString::Format(wxT("%d") ,info.at(U("version")).as_integer()));
	}
	itemFlexGridSizer4->Add(itemStaticText22, 0, wxALIGN_CENTER_HORIZONTAL | wxALIGN_CENTER_VERTICAL | wxALL, 5);

	wxStaticText* itemStaticText23 = new wxStaticText(itemDialog1, wxID_STATIC, _("Locking"), wxDefaultPosition, wxDefaultSize, 0);
	itemFlexGridSizer4->Add(itemStaticText23, 0, wxALIGN_LEFT | wxALIGN_CENTER_VERTICAL | wxALL, 5);

	wxStaticText* itemStaticText24 = new wxStaticText(itemDialog1, wxID_STATIC, _("No"), wxDefaultPosition, wxDefaultSize, 0);
	if (info.has_field(U("locking"))) {
		itemStaticText24->SetLabel(info.at(U("locking")).as_bool() ? _("Yes") : _("No"));
	}
	itemFlexGridSizer4->Add(itemStaticText24, 0, wxALIGN_CENTER_HORIZONTAL | wxALIGN_CENTER_VERTICAL | wxALL, 5);

	wxStaticText* itemStaticText25 = new wxStaticText(itemDialog1, wxID_STATIC, _("Create Time"), wxDefaultPosition, wxDefaultSize, 0);
	itemFlexGridSizer4->Add(itemStaticText25, 0, wxALIGN_LEFT | wxALIGN_CENTER_VERTICAL | wxALL, 5);

	wxStaticText* itemStaticText26 = new wxStaticText(itemDialog1, wxID_STATIC, _("1970/01/01 00:00:00"), wxDefaultPosition, wxDefaultSize, 0);
	if (info.has_field(U("ctime"))) {
		itemStaticText26->SetLabel(ConvertTimeToDisplay(info.at(U("ctime")).as_number().to_int64() / 1000));
	}
	itemFlexGridSizer4->Add(itemStaticText26, 0, wxALIGN_CENTER_HORIZONTAL | wxALIGN_CENTER_VERTICAL | wxALL, 5);

	wxStaticText* itemStaticText27 = new wxStaticText(itemDialog1, wxID_STATIC, _("Modify Time"), wxDefaultPosition, wxDefaultSize, 0);
	itemFlexGridSizer4->Add(itemStaticText27, 0, wxALIGN_LEFT | wxALIGN_CENTER_VERTICAL | wxALL, 5);

	wxStaticText* itemStaticText28 = new wxStaticText(itemDialog1, wxID_STATIC, _("1970/01/01 00:00:00"), wxDefaultPosition, wxDefaultSize, 0);
	if (info.has_field(U("mtime"))) {
		itemStaticText28->SetLabel(ConvertTimeToDisplay(info.at(U("mtime")).as_number().to_int64() / 1000));
	}
	itemFlexGridSizer4->Add(itemStaticText28, 0, wxALIGN_CENTER_HORIZONTAL | wxALIGN_CENTER_VERTICAL | wxALL, 5);

	wxStaticText* itemStaticText29 = new wxStaticText(itemDialog1, wxID_STATIC, _("Access Time"), wxDefaultPosition, wxDefaultSize, 0);
	itemFlexGridSizer4->Add(itemStaticText29, 0, wxALIGN_LEFT | wxALIGN_CENTER_VERTICAL | wxALL, 5);

	wxStaticText* itemStaticText30 = new wxStaticText(itemDialog1, wxID_STATIC, _("1970/01/01 00:00:00"), wxDefaultPosition, wxDefaultSize, 0);
	if (info.has_field(U("atime"))) {
		itemStaticText30->SetLabel(ConvertTimeToDisplay(info.at(U("atime")).as_number().to_int64() / 1000));
	}
	itemFlexGridSizer4->Add(itemStaticText30, 0, wxALIGN_CENTER_HORIZONTAL | wxALIGN_CENTER_VERTICAL | wxALL, 5);

	itemFlexGridSizer4->AddGrowableRow(0);
	itemFlexGridSizer4->AddGrowableCol(1);

	wxStaticLine* itemStaticLine31 = new wxStaticLine(itemDialog1, wxID_STATIC, wxDefaultPosition, wxDefaultSize, wxLI_HORIZONTAL);
	itemBoxSizer1->Add(itemStaticLine31, 0, wxGROW, 5);

	wxBoxSizer* itemBoxSizer32 = new wxBoxSizer(wxHORIZONTAL);
	itemBoxSizer1->Add(itemBoxSizer32, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);

	wxButton* itemButton33 = new wxButton(itemDialog1, wxID_CLOSE);
	itemBoxSizer32->Add(itemButton33, 0, wxALIGN_CENTER_VERTICAL | wxALL, 5);
	itemButton33->Bind(wxEVT_BUTTON, &FileDetail::CloseBtnClicked, this);
	////@end FileDetail content construction
}


/*
 * Should we show tooltips?
 */

bool FileDetail::ShowToolTips()
{
	return true;
}

void FileDetail::CloseBtnClicked(wxCommandEvent & event)
{
	wxUnusedVar(event);
	this->Close();
}

/*
 * Get bitmap resources
 */

wxBitmap FileDetail::GetBitmapResource(const wxString& name)
{
	// Bitmap retrieval
////@begin FileDetail bitmap retrieval
	wxUnusedVar(name);
	return wxNullBitmap;
	////@end FileDetail bitmap retrieval
}

/*
 * Get icon resources
 */

wxIcon FileDetail::GetIconResource(const wxString& name)
{
	// Icon retrieval
////@begin FileDetail icon retrieval
	wxUnusedVar(name);
	return wxNullIcon;
	////@end FileDetail icon retrieval
}
