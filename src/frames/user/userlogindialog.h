/////////////////////////////////////////////////////////////////////////////
// Name:        userlogindialog.h
// Purpose:     
// Author:      
// Modified by: 
// Created:     16/10/2018 22:40:32
// RCS-ID:      
// Copyright:   
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (unregistered), 16/10/2018 22:40:32

#ifndef _USERLOGINDIALOG_H_
#define _USERLOGINDIALOG_H_


/*!
 * Includes
 */

////@begin includes
#include "../../common/common_wx.h"
#include "wx/notebook.h"
#include "../../util/simple_timer.h"
#include <pplx/pplxtasks.h>
////@end includes

/*!
 * Forward declarations
 */

////@begin forward declarations
////@end forward declarations

/*!
 * Control identifiers
 */

////@begin control identifiers

#define SYMBOL_USERLOGINDIALOG_STYLE wxCAPTION|wxRESIZE_BORDER|wxSYSTEM_MENU|wxCLOSE_BOX|wxTAB_TRAVERSAL
#define SYMBOL_USERLOGINDIALOG_TITLE _("UserLoginDialog")
#define SYMBOL_USERLOGINDIALOG_SIZE wxSize(580, 360)
#define SYMBOL_USERLOGINDIALOG_POSITION wxDefaultPosition
////@end control identifiers


/*!
 * UserLoginDialog class declaration
 */

class UserLoginDialog: public wxDialog
{
DECLARE_DYNAMIC_CLASS( UserLoginDialog )
DECLARE_EVENT_TABLE()

public:
	/// Constructors
	UserLoginDialog();
	UserLoginDialog( wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& caption = SYMBOL_USERLOGINDIALOG_TITLE, const wxPoint& pos = SYMBOL_USERLOGINDIALOG_POSITION, const wxSize& size = SYMBOL_USERLOGINDIALOG_SIZE, long style = SYMBOL_USERLOGINDIALOG_STYLE );

	/// Creation
	bool Create( wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& caption = SYMBOL_USERLOGINDIALOG_TITLE, const wxPoint& pos = SYMBOL_USERLOGINDIALOG_POSITION, const wxSize& size = SYMBOL_USERLOGINDIALOG_SIZE, long style = SYMBOL_USERLOGINDIALOG_STYLE );

	/// Destructor
	~UserLoginDialog();

	/// Initialises member variables
	void Init();

	/// Creates the controls and sizers
	void CreateControls();

////@begin UserLoginDialog event handler declarations

	/// wxEVT_LEFT_UP event handler for wxID_STATIC
	void OnLeftUp( wxMouseEvent& event );

////@end UserLoginDialog event handler declarations

////@begin UserLoginDialog member function declarations

	/// Retrieves bitmap resources
	wxBitmap GetBitmapResource( const wxString& name );

	/// Retrieves icon resources
	wxIcon GetIconResource( const wxString& name );
////@end UserLoginDialog member function declarations

	/// Should we show tooltips?
	static bool ShowToolTips();

	int GetNoteCurrentSelection();

	//wxString GetUserCountryCode();
    wxString GetUsePassword();
	wxString GetUserInput();
    wxString GetMessagePhoneInput();
    wxString GetMessageCodeInput();
    wxString GetMessageCountryCode();
    wxString GetPasswordCountryCode();
    wxString GetPhoneInfo();
    bool IsRegisterNew();
////@begin UserLoginDialog member variables
////@end UserLoginDialog member variables
private:

    wxChoice* passwordCountryCodeSelection = nullptr;
    wxChoice* messageCountryCodeSelection = nullptr;
	wxNotebook* itemNotebook = nullptr;
	wxTextCtrl* userInput = nullptr;
    wxTextCtrl* messagePhoneInput = nullptr;
    wxTextCtrl* userPasswordInput = nullptr;
    //wxTextCtrl* userPassword = nullptr;

	//int ia[] = {1};


	//void FillCountryCodeInput(wxChoice* userInput);
	void SendTextMessage();
    wxArrayString GetCountryCodeArray();
    wxString GetCountryCode(wxChoice* choice);
    SimpleTimer timer = SimpleTimer();
    void ResetTimerClick();
    wxButton* sendMessageButton = nullptr;
    time_t last_send_message_time = 0;
    void SendMessageButtonClicked(wxCommandEvent &event);
    wxTextCtrl* messageCodeInput = nullptr;
    wxString phoneInfo;
	pplx::cancellation_token_source send_message_cancellation_token_source = pplx::cancellation_token_source();

	bool registerNew = false;

	void EndModal(int retCode) override;
	//void OnClose(wxCloseEvent& event);

};

#endif
// _USERLOGINDIALOG_H_
